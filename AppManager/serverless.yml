service: api-app-manager

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager

custom:
  webpack:
    includeModules:
      forceExclude:
        - node_modules/aws-sdk
  role:
    dev: arn:aws:iam::951585821496:role/Lambda
    prod: arn:aws:iam::211602931179:role/Lambda
  deploymentBucket:
    dev: dpm-lambda-deployment-dev
    prod: dpm-lambda-deployment
  profile:
    dev: DigiDev
    prod: DigiProd
  domain:
    domainName:
      dev: 'dev-api.digicore.io'
      prod: 'api.digicore.io' 
  customDomain:  
      domainName: ${self:custom.domain.domainName.${self:provider.stage}} 
      basePath: 'digitrack'
      stage: ${self:provider.stage}
      createRoute53Record: true
      certificateName: '*.digicore.io'
      endpointType: 'edge'

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage,'prod'}
  profile: ${self:custom.profile.${self:provider.stage}} 
  region: us-west-2
  apiKeys:
    - api-key
  stackName: api-digitrack
  role: ${self:custom.role.${self:provider.stage}}
  deploymentBucket:
    name: ${self:custom.deploymentBucket.${self:provider.stage}}
    serverSideEncryption: AES256
  apiName: api.app-registry
  environment:
    SERVICE_NAME: ${self:service}



functions:
  service:
    handler: handler.handle
    events:
      - http:
          path: app-entity
          method: get
          cors: true
          private: true  
      - http:
          method: put
          path: app-entity
          cors: true
          private: true
     
